{"version":3,"file":"static/js/953.c0fbd3ba.chunk.js","mappings":"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","sources":["components/Card/Card.jsx","components/FilterForm/FilterForm.jsx","components/pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["const Card = ({ car }) => {\n  const addressParts = car.address.split(', ');\n  const city = addressParts[1];\n  const country = addressParts[2];\n\n  return (\n    <div>\n      <div>\n        <div>\n          <div>\n            {car.make}\n            {car.model},{car.year}\n          </div>\n          <div>{car.rentalPrice}</div>\n        </div>\n        <div>\n          {city}\n          {country}\n          {car.rentalCompany}\n          {'Premium'}\n        </div>\n        <div>\n          {car.type}\n          {car.model}\n          {car.id}\n          {car.accessories[car.accessories.length - 1]}\n        </div>\n      </div>\n      <button type=\"button\">Learn more</button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\n\nconst FilterForm = ({ carBrands, onFilterChange }) => {\n  const [selectedPrice, setSelectedPrice] = useState(''); // Додайте стан для вибраної ціни\n\n  const handleFilterChange = e => {\n    e.preventDefault();\n    const brand = e.target.brand.value;\n    const maxPrice = parseFloat(selectedPrice); // Використовуйте вибрану ціну\n    const minMileage =\n      e.target.minMileage.value.trim() === ''\n        ? -Infinity\n        : parseFloat(e.target.minMileage.value);\n    const maxMileage = parseFloat(e.target.maxMileage.value);\n    onFilterChange({ brand, maxPrice, minMileage, maxMileage });\n  };\n\n  const handlePriceChange = e => {\n    setSelectedPrice(e.target.value); // Оновлюйте вибрану ціну при зміні вибору\n  };\n\n  return (\n    <form onSubmit={handleFilterChange}>\n      <select name=\"brand\">\n        <option value=\"\">Виберіть марку автомобіля</option>\n        {carBrands.map(brand => (\n          <option key={brand} value={brand}>\n            {brand}\n          </option>\n        ))}\n      </select>\n      <input type=\"number\" name=\"minMileage\" placeholder=\"Пробіг від\" />\n      <input type=\"number\" name=\"maxMileage\" placeholder=\"Пробіг до\" />\n      <input\n        type=\"number\"\n        name=\"maxPrice\"\n        placeholder=\"Максимальна ціна\"\n        value={selectedPrice}\n        onChange={handlePriceChange}\n      />\n      <button type=\"submit\">Фільтрувати</button>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Card from '../../Card/Card';\nimport FilterForm from '../../FilterForm/FilterForm';\n\nconst CatalogPage = () => {\n  const [cars, setCars] = useState([]);\n  const [filteredCars, setFilteredCars] = useState([]);\n  const [carBrands, setCarBrands] = useState([]);\n  const [carPrices, setCarPrices] = useState([]);\n  const [carsPerPage, setCarsPerPage] = useState(8);\n  const [loadMoreCount, setLoadMoreCount] = useState(1);\n  const [remainingCars, setRemainingCars] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get('https://648cbfdc8620b8bae7ed56b5.mockapi.io/advert')\n      .then(response => {\n        const carsData = response.data;\n        const uniqueBrands = [...new Set(carsData.map(car => car.make))];\n        const uniquePrices = [\n          ...new Set(carsData.map(car => Math.ceil(car.rentalPrice / 10) * 10)),\n        ];\n\n        setCarBrands(uniqueBrands);\n        setCarPrices(uniquePrices);\n        setCars(carsData);\n        setFilteredCars(carsData.slice(0, carsPerPage));\n        setRemainingCars(carsData.length - carsPerPage);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні даних:', error);\n      });\n  }, [carsPerPage]);\n\n  const handleFilterChange = ({ brand, maxPrice, minMileage, maxMileage }) => {\n    const filtered = cars.filter(car => {\n      const brandMatch =\n        !brand || car.make.toLowerCase() === brand.toLowerCase();\n      const priceMatch = !maxPrice || car.rentalPrice <= maxPrice;\n      const minMileageMatch =\n        !minMileage || car.mileage >= parseFloat(minMileage);\n      const maxMileageMatch =\n        !maxMileage || car.mileage <= parseFloat(maxMileage);\n      return brandMatch && priceMatch && minMileageMatch && maxMileageMatch;\n    });\n\n    setFilteredCars(filtered);\n    setRemainingCars(filtered.length - carsPerPage);\n  };\n\n  const handleLoadMore = () => {\n    const nextCarsPerPage = carsPerPage + 8;\n    const loadedCars = cars.slice(\n      carsPerPage * loadMoreCount,\n      nextCarsPerPage * loadMoreCount\n    );\n\n    setCarsPerPage(nextCarsPerPage);\n\n    if (remainingCars - loadedCars.length > 0) {\n      setFilteredCars(prevFilteredCars => [...prevFilteredCars, ...loadedCars]);\n      setLoadMoreCount(prevCount => prevCount + 1);\n    } else {\n      setFilteredCars(prevFilteredCars => [\n        ...prevFilteredCars,\n        ...loadedCars.slice(0, remainingCars),\n      ]);\n      setRemainingCars(0);\n    }\n  };\n\n  return (\n    <div>\n      <FilterForm\n        carBrands={carBrands}\n        carPrices={carPrices}\n        onFilterChange={handleFilterChange}\n      />\n      <ul>\n        {filteredCars.map(car => (\n          <li key={car.id}>\n            <Card car={car} />\n          </li>\n        ))}\n      </ul>\n      {remainingCars > 0 && <button onClick={handleLoadMore}>Load more</button>}\n    </div>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["car","addressParts","address","split","city","country","make","model","year","rentalPrice","rentalCompany","type","id","accessories","length","carBrands","onFilterChange","useState","selectedPrice","setSelectedPrice","onSubmit","e","preventDefault","brand","target","value","maxPrice","parseFloat","minMileage","trim","Infinity","maxMileage","name","map","placeholder","onChange","cars","setCars","filteredCars","setFilteredCars","setCarBrands","carPrices","setCarPrices","carsPerPage","setCarsPerPage","loadMoreCount","setLoadMoreCount","remainingCars","setRemainingCars","useEffect","axios","then","response","carsData","data","uniqueBrands","Set","uniquePrices","Math","ceil","slice","catch","error","console","filtered","filter","brandMatch","toLowerCase","priceMatch","minMileageMatch","mileage","maxMileageMatch","onClick","nextCarsPerPage","loadedCars","prevFilteredCars","prevCount"],"sourceRoot":""}