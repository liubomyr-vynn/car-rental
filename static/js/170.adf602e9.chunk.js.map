{"version":3,"file":"static/js/170.adf602e9.chunk.js","mappings":"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","sources":["components/FilterForm/FilterForm.styled.jsx","components/FilterForm/FilterForm.jsx","pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 29px;\n  margin-bottom: 50px;\n`;\n","import React, { useState } from 'react';\nimport { FilterContainer } from './FilterForm.styled';\n\nconst FilterForm = ({ carBrands, onFilterChange }) => {\n  const [selectedPrice, setSelectedPrice] = useState('');\n\n  const handleFilterChange = e => {\n    e.preventDefault();\n    const brand = e.target.brand.value;\n    const maxPrice = parseFloat(selectedPrice);\n    const minMileage =\n      e.target.minMileage.value.trim() === ''\n        ? -Infinity\n        : parseFloat(e.target.minMileage.value);\n    const maxMileage = parseFloat(e.target.maxMileage.value);\n    onFilterChange({ brand, maxPrice, minMileage, maxMileage });\n  };\n\n  const handlePriceChange = e => {\n    setSelectedPrice(e.target.value);\n  };\n\n  return (\n    <FilterContainer>\n      <form onSubmit={handleFilterChange}>\n        <select name=\"brand\">\n          <option value=\"\">Enter the text</option>\n          {carBrands.map(brand => (\n            <option key={brand} value={brand}>\n              {brand}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          name=\"maxPrice\"\n          placeholder=\"To $\"\n          value={selectedPrice}\n          onChange={handlePriceChange}\n        />\n        <label>Сar mileage / km</label>\n        <input type=\"number\" name=\"minMileage\" placeholder=\"From\" />\n        <input type=\"number\" name=\"maxMileage\" placeholder=\"To\" />\n\n        <button type=\"submit\">Search</button>\n      </form>\n    </FilterContainer>\n  );\n};\n\nexport default FilterForm;\n","import styled from '@emotion/styled';\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 29px;\n  margin-bottom: 100px;\n`;\n\nexport const LoadMoreContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  width: 274px;\n  padding: 12px 0;\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n  border-radius: 12px;\n  background: #5a7aaf;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  margin-top: 18px;\n  box-shadow: 0px 3.43693px 3.43693px 0px rgba(0, 0, 0, 0.25);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background: #445c84;\n  }\n\n  @media (min-width: 768px) {\n    margin-top: 24px;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 28px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from '../../components/Card/Card';\nimport FilterForm from '../../components/FilterForm/FilterForm';\nimport Container from 'components/Container/Container';\nimport {\n  CardContainer,\n  LoadMoreBtn,\n  LoadMoreContainer,\n} from './CatalogPage.styled';\n\nconst CatalogPage = () => {\n  const [cars, setCars] = useState([]);\n  const [filteredCars, setFilteredCars] = useState([]);\n  const [carBrands, setCarBrands] = useState([]);\n  const [carPrices, setCarPrices] = useState([]);\n  const [carsPerPage, setCarsPerPage] = useState(8);\n  const [loadMoreCount, setLoadMoreCount] = useState(1);\n  const [remainingCars, setRemainingCars] = useState(0);\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('https://648cbfdc8620b8bae7ed56b5.mockapi.io/advert')\n      .then(response => {\n        const carsData = response.data;\n        const uniqueBrands = [...new Set(carsData.map(car => car.make))];\n        const uniquePrices = [\n          ...new Set(carsData.map(car => Math.ceil(car.rentalPrice / 10) * 10)),\n        ];\n\n        setCarBrands(uniqueBrands);\n        setCarPrices(uniquePrices);\n        setCars(carsData);\n        setFilteredCars(carsData.slice(0, carsPerPage));\n        setRemainingCars(carsData.length - carsPerPage);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні даних:', error);\n      });\n  }, [carsPerPage]);\n\n  useEffect(() => {\n    const favorites = localStorage.getItem('favorites');\n    if (favorites) {\n      setFavorites(JSON.parse(favorites));\n    }\n  }, []);\n\n  const updateFavorites = (carId, isFavorite) => {\n    const updatedFavorites = isFavorite\n      ? [...favorites, carId]\n      : favorites.filter(id => id !== carId);\n\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const handleFilterChange = ({ brand, maxPrice, minMileage, maxMileage }) => {\n    const filtered = cars.filter(car => {\n      const brandMatch =\n        !brand || car.make.toLowerCase() === brand.toLowerCase();\n      const priceMatch = !maxPrice || car.rentalPrice <= maxPrice;\n      const minMileageMatch =\n        !minMileage || car.mileage >= parseFloat(minMileage);\n      const maxMileageMatch =\n        !maxMileage || car.mileage <= parseFloat(maxMileage);\n      return brandMatch && priceMatch && minMileageMatch && maxMileageMatch;\n    });\n\n    setFilteredCars(filtered);\n    setRemainingCars(filtered.length - carsPerPage);\n  };\n\n  const handleLoadMore = () => {\n    const nextCarsPerPage = carsPerPage + 8;\n    const loadedCars = cars.slice(\n      carsPerPage * loadMoreCount,\n      nextCarsPerPage * loadMoreCount\n    );\n\n    setCarsPerPage(nextCarsPerPage);\n\n    if (remainingCars - loadedCars.length > 0) {\n      setFilteredCars(prevFilteredCars => [...prevFilteredCars, ...loadedCars]);\n      setLoadMoreCount(prevCount => prevCount + 1);\n    } else {\n      setFilteredCars(prevFilteredCars => [\n        ...prevFilteredCars,\n        ...loadedCars.slice(0, remainingCars),\n      ]);\n      setRemainingCars(0);\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <FilterForm\n          carBrands={carBrands}\n          carPrices={carPrices}\n          onFilterChange={handleFilterChange}\n        />\n        <CardContainer>\n          {filteredCars.map(car => (\n            <div key={car.id}>\n              <Card\n                car={car}\n                isFavoriteProp={favorites.includes(car.id)}\n                updateFavorites={updateFavorites}\n              />\n            </div>\n          ))}\n        </CardContainer>\n        {remainingCars > 0 && (\n          <LoadMoreContainer>\n            <LoadMoreBtn onClick={handleLoadMore}>Load more</LoadMoreBtn>\n          </LoadMoreContainer>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["FilterContainer","styled","carBrands","onFilterChange","useState","selectedPrice","setSelectedPrice","onSubmit","e","preventDefault","brand","target","value","maxPrice","parseFloat","minMileage","trim","Infinity","maxMileage","name","map","type","placeholder","onChange","CardContainer","LoadMoreContainer","LoadMoreBtn","cars","setCars","filteredCars","setFilteredCars","setCarBrands","carPrices","setCarPrices","carsPerPage","setCarsPerPage","loadMoreCount","setLoadMoreCount","remainingCars","setRemainingCars","favorites","setFavorites","useEffect","axios","then","response","carsData","data","uniqueBrands","Set","car","make","uniquePrices","Math","ceil","rentalPrice","slice","length","catch","error","console","localStorage","getItem","JSON","parse","updateFavorites","carId","isFavorite","updatedFavorites","filter","id","setItem","stringify","Container","filtered","brandMatch","toLowerCase","priceMatch","minMileageMatch","mileage","maxMileageMatch","Card","isFavoriteProp","includes","onClick","nextCarsPerPage","loadedCars","prevFilteredCars","prevCount"],"sourceRoot":""}