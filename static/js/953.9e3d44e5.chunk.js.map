{"version":3,"file":"static/js/953.9e3d44e5.chunk.js","mappings":"0MAiCA,EAjCa,SAAC,GAAa,IAAXA,EAAU,EAAVA,IACRC,EAAeD,EAAIE,QAAQC,MAAM,MACjCC,EAAOH,EAAa,GACpBI,EAAUJ,EAAa,GAE7B,OACE,4BACE,4BACE,4BACE,2BACGD,EAAIM,KACJN,EAAIO,MAFP,IAEeP,EAAIQ,SAEnB,yBAAMR,EAAIS,kBAEZ,2BACGL,EACAC,EACAL,EAAIU,cACJ,cAEH,2BACGV,EAAIW,KACJX,EAAIO,MACJP,EAAIY,GACJZ,EAAIa,YAAYb,EAAIa,YAAYC,OAAS,UAG9C,mBAAQH,KAAK,SAAb,0BAGL,ECMD,EAnCmB,SAAC,GAA8C,IAA5CI,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAU1C,OACE,kBAAMC,SAVmB,SAAAC,GACzBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOD,MAAME,MACvBC,EAAWC,WAAWN,EAAEG,OAAOE,SAASD,OACxCG,EAAaD,WAAWN,EAAEG,OAAOI,WAAWH,OAC5CI,EAAaF,WAAWN,EAAEG,OAAOK,WAAWJ,OAClDN,EAAe,CAAEI,MAAAA,EAAOG,SAAAA,EAAUE,WAAAA,EAAYC,WAAAA,GAC/C,EAGC,WACE,oBAAQC,KAAK,QAAb,WACE,mBAAQL,MAAM,GAAd,0JACCR,EAAUc,KAAI,SAAAR,GAAK,OAClB,mBAAoBE,MAAOF,EAA3B,SACGA,GADUA,EADK,QAMtB,oBAAQO,KAAK,WAAb,WACE,mBAAQL,MAAM,GAAd,0JACCP,EAAUa,KAAI,SAAAC,GAAK,OAClB,mBAAoBP,MAAOO,EAA3B,gCACSA,EADT,yBAAaA,EADK,QAMtB,kBAAOnB,KAAK,SAASiB,KAAK,aAAaG,YAAY,6DACnD,kBAAOpB,KAAK,SAASiB,KAAK,aAAaG,YAAY,uDACnD,mBAAQpB,KAAK,SAAb,kFAGL,EC6BD,EA1DoB,WAClB,OAAwBqB,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOjB,EAAP,KAAkBsB,EAAlB,KACA,GAAkCL,EAAAA,EAAAA,UAAS,IAA3C,eAAOhB,EAAP,KAAkBsB,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAERC,EAAAA,EAAAA,IACO,sDACJC,MAAK,SAAAC,GACJ,IAAMC,EAAWD,EAASE,KAEpBC,GAAY,OAAO,IAAIC,IAAIH,EAASd,KAAI,SAAA7B,GAAG,OAAIA,EAAIM,IAAR,MACjD+B,EAAaQ,GAEb,IAAME,GAAY,OACb,IAAID,IAAIH,EAASd,KAAI,SAAA7B,GAAG,OAAsC,GAAlCgD,KAAKC,KAAKjD,EAAIS,YAAc,GAAhC,MAE7B6B,EAAaS,GACbb,EAAQS,GACRP,EAAgBO,EACjB,IACAO,OAAM,SAAAC,GACLC,QAAQD,MAAM,uJAAgCA,EAC/C,GACJ,GAAE,IAeH,OACE,4BACE,SAAC,EAAD,CACEpC,UAAWA,EACXC,UAAWA,EACXC,eAlBqB,SAAC,GAAiD,IAA/CI,EAA8C,EAA9CA,MAAOG,EAAuC,EAAvCA,SAAUE,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACnD0B,EAAWpB,EAAKqB,QAAO,SAAAtD,GAC3B,IAAMuD,GACHlC,GAASrB,EAAIM,KAAKkD,gBAAkBnC,EAAMmC,cACvCC,GAAcjC,GAAYxB,EAAIS,aAAee,EAC7CkC,GAAmBhC,GAAc1B,EAAI2D,SAAWjC,EAChDkC,GAAmBjC,GAAc3B,EAAI2D,SAAWhC,EACtD,OAAO4B,GAAcE,GAAcC,GAAmBE,CACvD,IAEDxB,EAAgBiB,EACjB,KASG,wBACGlB,EAAaN,KAAI,SAAA7B,GAAG,OACnB,yBACE,SAAC,EAAD,CAAMA,IAAKA,KADJA,EAAIY,GADM,QAQ5B,C","sources":["components/Card/Card.jsx","components/FilterForm/FilterForm.jsx","components/pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["const Card = ({ car }) => {\n  const addressParts = car.address.split(', ');\n  const city = addressParts[1];\n  const country = addressParts[2];\n\n  return (\n    <div>\n      <div>\n        <div>\n          <div>\n            {car.make}\n            {car.model},{car.year}\n          </div>\n          <div>{car.rentalPrice}</div>\n        </div>\n        <div>\n          {city}\n          {country}\n          {car.rentalCompany}\n          {'Premium'}\n        </div>\n        <div>\n          {car.type}\n          {car.model}\n          {car.id}\n          {car.accessories[car.accessories.length - 1]}\n        </div>\n      </div>\n      <button type=\"button\">Learn more</button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nconst FilterForm = ({ carBrands, carPrices, onFilterChange }) => {\n  const handleFilterChange = e => {\n    e.preventDefault();\n    const brand = e.target.brand.value;\n    const maxPrice = parseFloat(e.target.maxPrice.value);\n    const minMileage = parseFloat(e.target.minMileage.value);\n    const maxMileage = parseFloat(e.target.maxMileage.value);\n    onFilterChange({ brand, maxPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleFilterChange}>\n      <select name=\"brand\">\n        <option value=\"\">Виберіть марку автомобіля</option>\n        {carBrands.map(brand => (\n          <option key={brand} value={brand}>\n            {brand}\n          </option>\n        ))}\n      </select>\n      <select name=\"maxPrice\">\n        <option value=\"\">Виберіть максимальну ціну</option>\n        {carPrices.map(price => (\n          <option key={price} value={price}>\n            {`До ${price} дол.`}\n          </option>\n        ))}\n      </select>\n      <input type=\"number\" name=\"minMileage\" placeholder=\"Пробіг від\" />\n      <input type=\"number\" name=\"maxMileage\" placeholder=\"Пробіг до\" />\n      <button type=\"submit\">Фільтрувати</button>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Card from '../../Card/Card';\nimport FilterForm from '../../FilterForm/FilterForm';\n\nconst CatalogPage = () => {\n  const [cars, setCars] = useState([]);\n  const [filteredCars, setFilteredCars] = useState([]);\n  const [carBrands, setCarBrands] = useState([]);\n  const [carPrices, setCarPrices] = useState([]);\n\n  useEffect(() => {\n    // Отримати всі автомобілі з ресурсу\n    axios\n      .get('https://648cbfdc8620b8bae7ed56b5.mockapi.io/advert')\n      .then(response => {\n        const carsData = response.data;\n        // Отримати унікальні марки автомобілів\n        const uniqueBrands = [...new Set(carsData.map(car => car.make))];\n        setCarBrands(uniqueBrands);\n        // Отримати унікальні ціни і заокруглити їх до десятків\n        const uniquePrices = [\n          ...new Set(carsData.map(car => Math.ceil(car.rentalPrice / 10) * 10)),\n        ];\n        setCarPrices(uniquePrices);\n        setCars(carsData);\n        setFilteredCars(carsData);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні даних:', error);\n      });\n  }, []);\n\n  const handleFilterChange = ({ brand, maxPrice, minMileage, maxMileage }) => {\n    const filtered = cars.filter(car => {\n      const brandMatch =\n        !brand || car.make.toLowerCase() === brand.toLowerCase();\n      const priceMatch = !maxPrice || car.rentalPrice <= maxPrice;\n      const minMileageMatch = !minMileage || car.mileage >= minMileage;\n      const maxMileageMatch = !maxMileage || car.mileage <= maxMileage;\n      return brandMatch && priceMatch && minMileageMatch && maxMileageMatch;\n    });\n\n    setFilteredCars(filtered);\n  };\n\n  return (\n    <div>\n      <FilterForm\n        carBrands={carBrands}\n        carPrices={carPrices}\n        onFilterChange={handleFilterChange}\n      />\n      <ul>\n        {filteredCars.map(car => (\n          <li key={car.id}>\n            <Card car={car} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default CatalogPage;\n"],"names":["car","addressParts","address","split","city","country","make","model","year","rentalPrice","rentalCompany","type","id","accessories","length","carBrands","carPrices","onFilterChange","onSubmit","e","preventDefault","brand","target","value","maxPrice","parseFloat","minMileage","maxMileage","name","map","price","placeholder","useState","cars","setCars","filteredCars","setFilteredCars","setCarBrands","setCarPrices","useEffect","axios","then","response","carsData","data","uniqueBrands","Set","uniquePrices","Math","ceil","catch","error","console","filtered","filter","brandMatch","toLowerCase","priceMatch","minMileageMatch","mileage","maxMileageMatch"],"sourceRoot":""}