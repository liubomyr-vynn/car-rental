{"version":3,"file":"static/js/677.cd8641f0.chunk.js","mappings":"kPAEaA,EAAgBC,EAAAA,EAAAA,IAAH,yJASbC,EAAoBD,EAAAA,EAAAA,IAAH,8FAMjBE,EAAcF,EAAAA,EAAAA,OAAH,8mB,SC8ExB,EArFoB,WAClB,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEA,GAAsCJ,EAAAA,EAAAA,UAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAA0CN,EAAAA,EAAAA,UAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAA0CR,EAAAA,EAAAA,UAAS,GAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KACA,GAAkCV,EAAAA,EAAAA,UAAS,IAA3C,eAAOW,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IACO,sDACJC,MAAK,SAAAC,GACJ,IAAMC,EAAWD,EAASE,KAE1BhB,EAAQe,GACRb,EAAgBa,EAASE,MAAM,EAAGd,IAClCK,EAAiBO,EAASG,OAASf,EACpC,IACAgB,OAAM,SAAAC,GACLC,QAAQD,MAAM,uJAAgCA,EAC/C,GACJ,GAAE,CAACjB,KAEJQ,EAAAA,EAAAA,YAAU,WACR,IAAMF,EAAYa,aAAaC,QAAQ,aACnCd,GACFC,EAAac,KAAKC,MAAMhB,GAE3B,GAAE,IAEH,IAAMiB,EAAkB,SAACC,EAAOC,GAC9B,IAAMC,EAAmBD,EAAU,kBAC3BnB,GAD2B,CAChBkB,IACflB,EAAUqB,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,CAAX,IAEvBjB,EAAamB,GACbP,aAAaU,QAAQ,YAAaR,KAAKS,UAAUJ,GAClD,EAuBD,OACE,0BACE,UAACK,EAAA,EAAD,YACE,SAACxC,EAAD,UACGO,EAAakC,KAAI,SAAAC,GAAG,OACnB,0BACE,SAACC,EAAA,EAAD,CACED,IAAKA,EACLE,eAAgB7B,EAAU8B,SAASH,EAAIL,IACvCL,gBAAiBA,KAJXU,EAAIL,GADK,MAUtBxB,EAAgB,IACf,SAACX,EAAD,WACE,SAACC,EAAD,CAAa2C,QArCA,WACrB,IAAMC,EAAkBtC,EAAc,EAChCuC,EAAa3C,EAAKkB,MACtBd,EAAcE,EACdoC,EAAkBpC,GAGpBD,EAAeqC,GAEXlC,EAAgBmC,EAAWxB,OAAS,GACtChB,GAAgB,SAAAyC,GAAgB,wBAAQA,IAAR,OAA6BD,GAA7B,IAChCpC,GAAiB,SAAAsC,GAAS,OAAIA,EAAY,CAAhB,MAE1B1C,GAAgB,SAAAyC,GAAgB,wBAC3BA,IAD2B,OAE3BD,EAAWzB,MAAM,EAAGV,IAFO,IAIhCC,EAAiB,GAEpB,EAkBS,SAAsC,oBAMjD,C","sources":["pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 29px;\n  margin-bottom: 100px;\n`;\n\nexport const LoadMoreContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  width: 274px;\n  padding: 12px 0;\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n  border-radius: 12px;\n  background: #5a7aaf;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  margin-top: 18px;\n  margin-bottom: 20px;\n  box-shadow: 0px 3.43693px 3.43693px 0px rgba(0, 0, 0, 0.25);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background: #445c84;\n  }\n\n  @media (min-width: 768px) {\n    margin-top: 24px;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 28px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from '../../components/Card/Card';\nimport Container from 'components/Container/Container';\nimport {\n  CardContainer,\n  LoadMoreBtn,\n  LoadMoreContainer,\n} from './CatalogPage.styled';\n\nconst CatalogPage = () => {\n  const [cars, setCars] = useState([]);\n  const [filteredCars, setFilteredCars] = useState([]);\n\n  const [carsPerPage, setCarsPerPage] = useState(8);\n  const [loadMoreCount, setLoadMoreCount] = useState(1);\n  const [remainingCars, setRemainingCars] = useState(0);\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('https://648cbfdc8620b8bae7ed56b5.mockapi.io/advert')\n      .then(response => {\n        const carsData = response.data;\n\n        setCars(carsData);\n        setFilteredCars(carsData.slice(0, carsPerPage));\n        setRemainingCars(carsData.length - carsPerPage);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні даних:', error);\n      });\n  }, [carsPerPage]);\n\n  useEffect(() => {\n    const favorites = localStorage.getItem('favorites');\n    if (favorites) {\n      setFavorites(JSON.parse(favorites));\n    }\n  }, []);\n\n  const updateFavorites = (carId, isFavorite) => {\n    const updatedFavorites = isFavorite\n      ? [...favorites, carId]\n      : favorites.filter(id => id !== carId);\n\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const handleLoadMore = () => {\n    const nextCarsPerPage = carsPerPage + 8;\n    const loadedCars = cars.slice(\n      carsPerPage * loadMoreCount,\n      nextCarsPerPage * loadMoreCount\n    );\n\n    setCarsPerPage(nextCarsPerPage);\n\n    if (remainingCars - loadedCars.length > 0) {\n      setFilteredCars(prevFilteredCars => [...prevFilteredCars, ...loadedCars]);\n      setLoadMoreCount(prevCount => prevCount + 1);\n    } else {\n      setFilteredCars(prevFilteredCars => [\n        ...prevFilteredCars,\n        ...loadedCars.slice(0, remainingCars),\n      ]);\n      setRemainingCars(0);\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <CardContainer>\n          {filteredCars.map(car => (\n            <div key={car.id}>\n              <Card\n                car={car}\n                isFavoriteProp={favorites.includes(car.id)}\n                updateFavorites={updateFavorites}\n              />\n            </div>\n          ))}\n        </CardContainer>\n        {remainingCars > 0 && (\n          <LoadMoreContainer>\n            <LoadMoreBtn onClick={handleLoadMore}>Load more</LoadMoreBtn>\n          </LoadMoreContainer>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["CardContainer","styled","LoadMoreContainer","LoadMoreBtn","useState","cars","setCars","filteredCars","setFilteredCars","carsPerPage","setCarsPerPage","loadMoreCount","setLoadMoreCount","remainingCars","setRemainingCars","favorites","setFavorites","useEffect","axios","then","response","carsData","data","slice","length","catch","error","console","localStorage","getItem","JSON","parse","updateFavorites","carId","isFavorite","updatedFavorites","filter","id","setItem","stringify","Container","map","car","Card","isFavoriteProp","includes","onClick","nextCarsPerPage","loadedCars","prevFilteredCars","prevCount"],"sourceRoot":""}